!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BigInteger	BigInteger.cc	/^BigInteger::BigInteger():_length(0),_number(NULL){$/;"	f	class:BigInteger
BigInteger	BigInteger.cc	/^BigInteger::BigInteger(const BigInteger& BI){$/;"	f	class:BigInteger
BigInteger	BigInteger.cc	/^BigInteger::BigInteger(const char *s){$/;"	f	class:BigInteger
BigInteger	BigInteger.cc	/^BigInteger::BigInteger(const int& n)$/;"	f	class:BigInteger
BigInteger	BigInteger.cc	/^BigInteger::BigInteger(const long long& n)$/;"	f	class:BigInteger
BigInteger	BigInteger.cc	/^BigInteger::BigInteger(const long& n)$/;"	f	class:BigInteger
EULER_H	euler.h	9;"	d
IN	euler.h	27;"	d
INR	euler.h	30;"	d
LIN	euler.h	29;"	d
LINR	euler.h	28;"	d
abs	euler.h	20;"	d
at	BigInteger.cc	/^BigType BigInteger::at( const ui& position ) const {$/;"	f	class:BigInteger
bit	euler.h	18;"	d
char2Int	euler.h	31;"	d
check	11.cc	/^int check(int a[][20], int i, int j, int di, int dj){$/;"	f
checkformat	BigInteger.cc	/^void BigInteger::checkformat( const BigInteger& BI )$/;"	f	class:BigInteger
err_handle	BigInteger.cc	/^void BigInteger::err_handle( const us& err_id )$/;"	f	class:BigInteger
factor	euler.h	/^    int factor;$/;"	m	struct:primeFactor
func	temp.cc	/^string func(){$/;"	f
gcd	euler.cc	/^int gcd(int a, int b){$/;"	f
gcdIt	euler.cc	/^int gcdIt(int a, int b){$/;"	f
getNumOfFactors	euler.cc	/^int getNumOfFactors(int n){$/;"	f
getNumOfFactorsPrimeTable	euler.cc	/^int getNumOfFactorsPrimeTable(int n, vector<int> p){$/;"	f
getPrimeFactors	euler.cc	/^vector<primeFactor> getPrimeFactors(int n){$/;"	f
getPrimes	euler.cc	/^vector<int> getPrimes(int maxN){$/;"	f
isPalindrome	euler.cc	/^bool isPalindrome(int n){$/;"	f
isPrime	euler.cc	/^bool isPrime(int x){$/;"	f
length	BigInteger.cc	/^ui BigInteger::length(){$/;"	f	class:BigInteger
ll	3.cc	25;"	d	file:
ll	euler.h	32;"	d
main	10.cc	/^int main ( int argc, char *argv[] ) {$/;"	f
main	11.cc	/^int main ( int argc, char *argv[] ) {$/;"	f
main	12.cc	/^int main ( int argc, char *argv[] ) {$/;"	f
main	13.cc	/^int main(){$/;"	f
main	3.cc	/^int main ( int argc, char *argv[] )$/;"	f
main	4.cc	/^int main ( int argc, char *argv[] )$/;"	f
main	5.cc	/^int main(){$/;"	f
main	6.cc	/^int main ( int argc, char *argv[] ) {$/;"	f
main	7.cc	/^int main ( int argc, char *argv[] ) {$/;"	f
main	8.cc	/^int main ( int argc, char *argv[] ) {$/;"	f
main	9.cc	/^int main ( int argc, char *argv[] ) {$/;"	f
main	BigInteger.cc	/^int main(){$/;"	f
main	temp.cc	/^int main(){$/;"	f
max	euler.h	19;"	d
maxN	10.cc	21;"	d	file:
maxN	11.cc	/^int maxN = 0;$/;"	v
maxN	7.cc	21;"	d	file:
num	euler.h	/^    int num;$/;"	m	struct:primeFactor
operator <<	BigInteger.cc	/^ostream& operator << ( ostream& os, BigInteger& BI)$/;"	f
operator =	BigInteger.cc	/^BigInteger& BigInteger::operator = ( const BigInteger& BI )$/;"	f	class:BigInteger
operator =	BigInteger.cc	/^BigInteger& BigInteger::operator = (const int& n)$/;"	f	class:BigInteger
operator =	BigInteger.cc	/^BigInteger& BigInteger::operator = (const long long& n)$/;"	f	class:BigInteger
operator =	BigInteger.cc	/^BigInteger& BigInteger::operator = (const long& n)$/;"	f	class:BigInteger
primeFactor	euler.h	/^    primeFactor(int f, int n){$/;"	f	struct:primeFactor
primeFactor	euler.h	/^struct primeFactor{$/;"	s
selectPrimes	euler.cc	/^vector<bool> selectPrimes(int maxN){$/;"	f
squareOfSum	euler.cc	/^int squareOfSum(int n){$/;"	f
sumOfSquare	euler.cc	/^int sumOfSquare(int n){$/;"	f
to_string	BigInteger.cc	/^BigInteger::string to_string(int n){$/;"	f
tostream	BigInteger.cc	/^ostream& BigInteger::tostream(ostream& os)$/;"	f	class:BigInteger
ui	euler.h	33;"	d
us	euler.h	34;"	d
~BigInteger	BigInteger.cc	/^BigInteger::~BigInteger()$/;"	f	class:BigInteger
